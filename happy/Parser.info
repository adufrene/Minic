-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.5 from Parser.y
-----------------------------------------------------------------------------

state 2 contains 1 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_calc -> Program                             (0)
	Program -> Types Declarations Functions            (1)
	Types ->                                           (2)
	Types -> Types TypeSub                             (3)
	TypeSub -> struct id '{' NestedDecl '}' ';'        (4)
	NestedDecl ->                                      (5)
	NestedDecl -> NestedDecl Decl ';'                  (6)
	Decl -> Type id                                    (7)
	Type -> int                                        (8)
	Type -> bool                                       (9)
	Type -> struct id                                  (10)
	Declarations ->                                    (11)
	Declarations -> Declarations Declaration           (12)
	Declaration -> Type IdList ';'                     (13)
	IdList -> id                                       (14)
	IdList -> IdList ',' id                            (15)
	Functions ->                                       (16)
	Functions -> Functions Function                    (17)
	Function -> fun id Parameters RetType '{' Declarations StatementList '}'   (18)
	Parameters -> '(' ')'                              (19)
	Parameters -> '(' DeclList ')'                     (20)
	DeclList -> Decl                                   (21)
	DeclList -> DeclList ',' Decl                      (22)
	RetType -> Type                                    (23)
	RetType -> void                                    (24)
	Statement -> Block                                 (25)
	Statement -> Assignment                            (26)
	Statement -> Print                                 (27)
	Statement -> Read                                  (28)
	Statement -> Conditional                           (29)
	Statement -> Loop                                  (30)
	Statement -> Delete                                (31)
	Statement -> Ret                                   (32)
	Statement -> Invocation                            (33)
	Block -> '{' StatementList '}'                     (34)
	StatementList ->                                   (35)
	StatementList -> StatementList Statement           (36)
	Assignment -> LValue '=' Expression ';'            (37)
	Print -> print Expression Endl ';'                 (38)
	Endl ->                                            (39)
	Endl -> endl                                       (40)
	Read -> read LValue ';'                            (41)
	Conditional -> if '(' Expression ')' Block ElseBlock   (42)
	ElseBlock ->                                       (43)
	ElseBlock -> else Block                            (44)
	Loop -> while '(' Expression ')' Block             (45)
	Delete -> delete Expression ';'                    (46)
	Ret -> return MaybeExpr ';'                        (47)
	MaybeExpr ->                                       (48)
	MaybeExpr -> Expression                            (49)
	Invocation -> id Arguments ';'                     (50)
	LValue -> id                                       (51)
	LValue -> LValue '.' id                            (52)
	Expression -> Boolterm                             (53)
	Expression -> Expression boolOp Boolterm           (54)
	Boolterm -> Simple                                 (55)
	Boolterm -> Boolterm cmpOp Simple                  (56)
	Simple -> Term                                     (57)
	Simple -> Simple '+' Term                          (58)
	Simple -> Simple '-' Term                          (59)
	Term -> Unary                                      (60)
	Term -> Term '*' Unary                             (61)
	Term -> Term '/' Unary                             (62)
	Unary -> Selector                                  (63)
	Unary -> '!' Unary                                 (64)
	Unary -> '-' Unary                                 (65)
	Selector -> Factor                                 (66)
	Selector -> Selector '.' id                        (67)
	Factor -> '(' Expression ')'                       (68)
	Factor -> id                                       (69)
	Factor -> id Arguments                             (70)
	Factor -> num                                      (71)
	Factor -> true                                     (72)
	Factor -> false                                    (73)
	Factor -> new id                                   (74)
	Factor -> null                                     (75)
	Arguments -> '(' ')'                               (76)
	Arguments -> '(' ExprList ')'                      (77)
	ExprList -> Expression                             (78)
	ExprList -> ExprList ',' Expression                (79)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	struct         { TokenStruct }
	int            { TokenInt }
	bool           { TokenBool }
	fun            { TokenFun }
	void           { TokenVoid }
	print          { TokenPrint }
	endl           { TokenEndl }
	read           { TokenRead }
	if             { TokenIf }
	else           { TokenElse }
	while          { TokenWhile }
	delete         { TokenDelete }
	return         { TokenReturn }
	true           { TokenTrue }
	false          { TokenFalse }
	new            { TokenNew }
	null           { TokenNull }
	id             { TokenId $$ }
	boolOp         { TokenBoolOp $$ }
	cmpOp          { TokenCmpOp $$ }
	num            { TokenNum $$ }
	'='            { TokenEq }
	'+'            { TokenPlus }
	'-'            { TokenMinus }
	'*'            { TokenTimes }
	'/'            { TokenDiv }
	'('            { TokenOB }
	')'            { TokenCB }
	'{'            { TokenLBrace }
	'}'            { TokenRBrace }
	';'            { TokenSemi }
	','            { TokenComma }
	'.'            { TokenDot }
	'!'            { TokenBang }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_calc     rule  0
	Program         rule  1
	Types           rules 2, 3
	TypeSub         rule  4
	NestedDecl      rules 5, 6
	Decl            rule  7
	Type            rules 8, 9, 10
	Declarations    rules 11, 12
	Declaration     rule  13
	IdList          rules 14, 15
	Functions       rules 16, 17
	Function        rule  18
	Parameters      rules 19, 20
	DeclList        rules 21, 22
	RetType         rules 23, 24
	Statement       rules 25, 26, 27, 28, 29, 30, 31, 32, 33
	Block           rule  34
	StatementList   rules 35, 36
	Assignment      rule  37
	Print           rule  38
	Endl            rules 39, 40
	Read            rule  41
	Conditional     rule  42
	ElseBlock       rules 43, 44
	Loop            rule  45
	Delete          rule  46
	Ret             rule  47
	MaybeExpr       rules 48, 49
	Invocation      rule  50
	LValue          rules 51, 52
	Expression      rules 53, 54
	Boolterm        rules 55, 56
	Simple          rules 57, 58, 59
	Term            rules 60, 61, 62
	Unary           rules 63, 64, 65
	Selector        rules 66, 67
	Factor          rules 68, 69, 70, 71, 72, 73, 74, 75
	Arguments       rules 76, 77
	ExprList        rules 78, 79

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	struct         reduce using rule 2
	int            reduce using rule 2
	bool           reduce using rule 2
	fun            reduce using rule 2
	%eof           reduce using rule 2

	Program        goto state 3
	Types          goto state 2

State 1



	Types          goto state 2

State 2

	Program -> Types . Declarations Functions           (rule 1)
	Types -> Types . TypeSub                            (rule 3)

	struct         shift, and enter state 6
			(reduce using rule 11)

	int            reduce using rule 11
	bool           reduce using rule 11
	fun            reduce using rule 11
	%eof           reduce using rule 11

	TypeSub        goto state 4
	Declarations   goto state 5

State 3

	%start_calc -> Program .                            (rule 0)

	%eof           accept


State 4

	Types -> Types TypeSub .                            (rule 3)

	struct         reduce using rule 3
	int            reduce using rule 3
	bool           reduce using rule 3
	fun            reduce using rule 3
	%eof           reduce using rule 3


State 5

	Program -> Types Declarations . Functions           (rule 1)
	Declarations -> Declarations . Declaration          (rule 12)

	struct         shift, and enter state 11
	int            shift, and enter state 12
	bool           shift, and enter state 13
	fun            reduce using rule 16
	%eof           reduce using rule 16

	Type           goto state 8
	Declaration    goto state 9
	Functions      goto state 10

State 6

	TypeSub -> struct . id '{' NestedDecl '}' ';'       (rule 4)

	id             shift, and enter state 7


State 7

	TypeSub -> struct id . '{' NestedDecl '}' ';'       (rule 4)

	'{'            shift, and enter state 19


State 8

	Declaration -> Type . IdList ';'                    (rule 13)

	id             shift, and enter state 18

	IdList         goto state 17

State 9

	Declarations -> Declarations Declaration .          (rule 12)

	struct         reduce using rule 12
	int            reduce using rule 12
	bool           reduce using rule 12
	fun            reduce using rule 12
	print          reduce using rule 12
	read           reduce using rule 12
	if             reduce using rule 12
	while          reduce using rule 12
	delete         reduce using rule 12
	return         reduce using rule 12
	id             reduce using rule 12
	'{'            reduce using rule 12
	'}'            reduce using rule 12
	%eof           reduce using rule 12


State 10

	Program -> Types Declarations Functions .           (rule 1)
	Functions -> Functions . Function                   (rule 17)

	fun            shift, and enter state 16
	%eof           reduce using rule 1

	Function       goto state 15

State 11

	Type -> struct . id                                 (rule 10)

	id             shift, and enter state 14


State 12

	Type -> int .                                       (rule 8)

	id             reduce using rule 8
	'{'            reduce using rule 8


State 13

	Type -> bool .                                      (rule 9)

	id             reduce using rule 9
	'{'            reduce using rule 9


State 14

	Type -> struct id .                                 (rule 10)

	id             reduce using rule 10
	'{'            reduce using rule 10


State 15

	Functions -> Functions Function .                   (rule 17)

	fun            reduce using rule 17
	%eof           reduce using rule 17


State 16

	Function -> fun . id Parameters RetType '{' Declarations StatementList '}'    (rule 18)

	id             shift, and enter state 23


State 17

	Declaration -> Type IdList . ';'                    (rule 13)
	IdList -> IdList . ',' id                           (rule 15)

	';'            shift, and enter state 21
	','            shift, and enter state 22


State 18

	IdList -> id .                                      (rule 14)

	';'            reduce using rule 14
	','            reduce using rule 14


State 19

	TypeSub -> struct id '{' . NestedDecl '}' ';'       (rule 4)

	struct         reduce using rule 5
	int            reduce using rule 5
	bool           reduce using rule 5
	'}'            reduce using rule 5

	NestedDecl     goto state 20

State 20

	TypeSub -> struct id '{' NestedDecl . '}' ';'       (rule 4)
	NestedDecl -> NestedDecl . Decl ';'                 (rule 6)

	struct         shift, and enter state 11
	int            shift, and enter state 12
	bool           shift, and enter state 13
	'}'            shift, and enter state 29

	Decl           goto state 27
	Type           goto state 28

State 21

	Declaration -> Type IdList ';' .                    (rule 13)

	struct         reduce using rule 13
	int            reduce using rule 13
	bool           reduce using rule 13
	fun            reduce using rule 13
	print          reduce using rule 13
	read           reduce using rule 13
	if             reduce using rule 13
	while          reduce using rule 13
	delete         reduce using rule 13
	return         reduce using rule 13
	id             reduce using rule 13
	'{'            reduce using rule 13
	'}'            reduce using rule 13
	%eof           reduce using rule 13


State 22

	IdList -> IdList ',' . id                           (rule 15)

	id             shift, and enter state 26


State 23

	Function -> fun id . Parameters RetType '{' Declarations StatementList '}'    (rule 18)

	'('            shift, and enter state 25

	Parameters     goto state 24

State 24

	Function -> fun id Parameters . RetType '{' Declarations StatementList '}'    (rule 18)

	struct         shift, and enter state 11
	int            shift, and enter state 12
	bool           shift, and enter state 13
	void           shift, and enter state 38

	Type           goto state 36
	RetType        goto state 37

State 25

	Parameters -> '(' . ')'                             (rule 19)
	Parameters -> '(' . DeclList ')'                    (rule 20)

	struct         shift, and enter state 11
	int            shift, and enter state 12
	bool           shift, and enter state 13
	')'            shift, and enter state 35

	Decl           goto state 33
	Type           goto state 28
	DeclList       goto state 34

State 26

	IdList -> IdList ',' id .                           (rule 15)

	';'            reduce using rule 15
	','            reduce using rule 15


State 27

	NestedDecl -> NestedDecl Decl . ';'                 (rule 6)

	';'            shift, and enter state 32


State 28

	Decl -> Type . id                                   (rule 7)

	id             shift, and enter state 31


State 29

	TypeSub -> struct id '{' NestedDecl '}' . ';'       (rule 4)

	';'            shift, and enter state 30


State 30

	TypeSub -> struct id '{' NestedDecl '}' ';' .       (rule 4)

	struct         reduce using rule 4
	int            reduce using rule 4
	bool           reduce using rule 4
	fun            reduce using rule 4
	%eof           reduce using rule 4


State 31

	Decl -> Type id .                                   (rule 7)

	')'            reduce using rule 7
	';'            reduce using rule 7
	','            reduce using rule 7


State 32

	NestedDecl -> NestedDecl Decl ';' .                 (rule 6)

	struct         reduce using rule 6
	int            reduce using rule 6
	bool           reduce using rule 6
	'}'            reduce using rule 6


State 33

	DeclList -> Decl .                                  (rule 21)

	')'            reduce using rule 21
	','            reduce using rule 21


State 34

	Parameters -> '(' DeclList . ')'                    (rule 20)
	DeclList -> DeclList . ',' Decl                     (rule 22)

	')'            shift, and enter state 40
	','            shift, and enter state 41


State 35

	Parameters -> '(' ')' .                             (rule 19)

	struct         reduce using rule 19
	int            reduce using rule 19
	bool           reduce using rule 19
	void           reduce using rule 19


State 36

	RetType -> Type .                                   (rule 23)

	'{'            reduce using rule 23


State 37

	Function -> fun id Parameters RetType . '{' Declarations StatementList '}'    (rule 18)

	'{'            shift, and enter state 39


State 38

	RetType -> void .                                   (rule 24)

	'{'            reduce using rule 24


State 39

	Function -> fun id Parameters RetType '{' . Declarations StatementList '}'    (rule 18)

	struct         reduce using rule 11
	int            reduce using rule 11
	bool           reduce using rule 11
	print          reduce using rule 11
	read           reduce using rule 11
	if             reduce using rule 11
	while          reduce using rule 11
	delete         reduce using rule 11
	return         reduce using rule 11
	id             reduce using rule 11
	'{'            reduce using rule 11
	'}'            reduce using rule 11

	Declarations   goto state 43

State 40

	Parameters -> '(' DeclList ')' .                    (rule 20)

	struct         reduce using rule 20
	int            reduce using rule 20
	bool           reduce using rule 20
	void           reduce using rule 20


State 41

	DeclList -> DeclList ',' . Decl                     (rule 22)

	struct         shift, and enter state 11
	int            shift, and enter state 12
	bool           shift, and enter state 13

	Decl           goto state 42
	Type           goto state 28

State 42

	DeclList -> DeclList ',' Decl .                     (rule 22)

	')'            reduce using rule 22
	','            reduce using rule 22


State 43

	Declarations -> Declarations . Declaration          (rule 12)
	Function -> fun id Parameters RetType '{' Declarations . StatementList '}'    (rule 18)

	struct         shift, and enter state 11
	int            shift, and enter state 12
	bool           shift, and enter state 13
	print          reduce using rule 35
	read           reduce using rule 35
	if             reduce using rule 35
	while          reduce using rule 35
	delete         reduce using rule 35
	return         reduce using rule 35
	id             reduce using rule 35
	'{'            reduce using rule 35
	'}'            reduce using rule 35

	Type           goto state 8
	Declaration    goto state 9
	StatementList  goto state 44

State 44

	Function -> fun id Parameters RetType '{' Declarations StatementList . '}'    (rule 18)
	StatementList -> StatementList . Statement          (rule 36)

	print          shift, and enter state 56
	read           shift, and enter state 57
	if             shift, and enter state 58
	while          shift, and enter state 59
	delete         shift, and enter state 60
	return         shift, and enter state 61
	id             shift, and enter state 62
	'{'            shift, and enter state 63
	'}'            shift, and enter state 64

	Statement      goto state 45
	Block          goto state 46
	Assignment     goto state 47
	Print          goto state 48
	Read           goto state 49
	Conditional    goto state 50
	Loop           goto state 51
	Delete         goto state 52
	Ret            goto state 53
	Invocation     goto state 54
	LValue         goto state 55

State 45

	StatementList -> StatementList Statement .          (rule 36)

	print          reduce using rule 36
	read           reduce using rule 36
	if             reduce using rule 36
	while          reduce using rule 36
	delete         reduce using rule 36
	return         reduce using rule 36
	id             reduce using rule 36
	'{'            reduce using rule 36
	'}'            reduce using rule 36


State 46

	Statement -> Block .                                (rule 25)

	print          reduce using rule 25
	read           reduce using rule 25
	if             reduce using rule 25
	while          reduce using rule 25
	delete         reduce using rule 25
	return         reduce using rule 25
	id             reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25


State 47

	Statement -> Assignment .                           (rule 26)

	print          reduce using rule 26
	read           reduce using rule 26
	if             reduce using rule 26
	while          reduce using rule 26
	delete         reduce using rule 26
	return         reduce using rule 26
	id             reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26


State 48

	Statement -> Print .                                (rule 27)

	print          reduce using rule 27
	read           reduce using rule 27
	if             reduce using rule 27
	while          reduce using rule 27
	delete         reduce using rule 27
	return         reduce using rule 27
	id             reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27


State 49

	Statement -> Read .                                 (rule 28)

	print          reduce using rule 28
	read           reduce using rule 28
	if             reduce using rule 28
	while          reduce using rule 28
	delete         reduce using rule 28
	return         reduce using rule 28
	id             reduce using rule 28
	'{'            reduce using rule 28
	'}'            reduce using rule 28


State 50

	Statement -> Conditional .                          (rule 29)

	print          reduce using rule 29
	read           reduce using rule 29
	if             reduce using rule 29
	while          reduce using rule 29
	delete         reduce using rule 29
	return         reduce using rule 29
	id             reduce using rule 29
	'{'            reduce using rule 29
	'}'            reduce using rule 29


State 51

	Statement -> Loop .                                 (rule 30)

	print          reduce using rule 30
	read           reduce using rule 30
	if             reduce using rule 30
	while          reduce using rule 30
	delete         reduce using rule 30
	return         reduce using rule 30
	id             reduce using rule 30
	'{'            reduce using rule 30
	'}'            reduce using rule 30


State 52

	Statement -> Delete .                               (rule 31)

	print          reduce using rule 31
	read           reduce using rule 31
	if             reduce using rule 31
	while          reduce using rule 31
	delete         reduce using rule 31
	return         reduce using rule 31
	id             reduce using rule 31
	'{'            reduce using rule 31
	'}'            reduce using rule 31


State 53

	Statement -> Ret .                                  (rule 32)

	print          reduce using rule 32
	read           reduce using rule 32
	if             reduce using rule 32
	while          reduce using rule 32
	delete         reduce using rule 32
	return         reduce using rule 32
	id             reduce using rule 32
	'{'            reduce using rule 32
	'}'            reduce using rule 32


State 54

	Statement -> Invocation .                           (rule 33)

	print          reduce using rule 33
	read           reduce using rule 33
	if             reduce using rule 33
	while          reduce using rule 33
	delete         reduce using rule 33
	return         reduce using rule 33
	id             reduce using rule 33
	'{'            reduce using rule 33
	'}'            reduce using rule 33


State 55

	Assignment -> LValue . '=' Expression ';'           (rule 37)
	LValue -> LValue . '.' id                           (rule 52)

	'='            shift, and enter state 91
	'.'            shift, and enter state 92


State 56

	Print -> print . Expression Endl ';'                (rule 38)

	true           shift, and enter state 76
	false          shift, and enter state 77
	new            shift, and enter state 78
	null           shift, and enter state 79
	id             shift, and enter state 80
	num            shift, and enter state 81
	'-'            shift, and enter state 82
	'('            shift, and enter state 83
	'!'            shift, and enter state 84

	Expression     goto state 90
	Boolterm       goto state 70
	Simple         goto state 71
	Term           goto state 72
	Unary          goto state 73
	Selector       goto state 74
	Factor         goto state 75

State 57

	Read -> read . LValue ';'                           (rule 41)

	id             shift, and enter state 89

	LValue         goto state 88

State 58

	Conditional -> if . '(' Expression ')' Block ElseBlock    (rule 42)

	'('            shift, and enter state 87


State 59

	Loop -> while . '(' Expression ')' Block            (rule 45)

	'('            shift, and enter state 86


State 60

	Delete -> delete . Expression ';'                   (rule 46)

	true           shift, and enter state 76
	false          shift, and enter state 77
	new            shift, and enter state 78
	null           shift, and enter state 79
	id             shift, and enter state 80
	num            shift, and enter state 81
	'-'            shift, and enter state 82
	'('            shift, and enter state 83
	'!'            shift, and enter state 84

	Expression     goto state 85
	Boolterm       goto state 70
	Simple         goto state 71
	Term           goto state 72
	Unary          goto state 73
	Selector       goto state 74
	Factor         goto state 75

State 61

	Ret -> return . MaybeExpr ';'                       (rule 47)

	true           shift, and enter state 76
	false          shift, and enter state 77
	new            shift, and enter state 78
	null           shift, and enter state 79
	id             shift, and enter state 80
	num            shift, and enter state 81
	'-'            shift, and enter state 82
	'('            shift, and enter state 83
	';'            reduce using rule 48
	'!'            shift, and enter state 84

	MaybeExpr      goto state 68
	Expression     goto state 69
	Boolterm       goto state 70
	Simple         goto state 71
	Term           goto state 72
	Unary          goto state 73
	Selector       goto state 74
	Factor         goto state 75

State 62

	Invocation -> id . Arguments ';'                    (rule 50)
	LValue -> id .                                      (rule 51)

	'='            reduce using rule 51
	'('            shift, and enter state 67
	'.'            reduce using rule 51

	Arguments      goto state 66

State 63

	Block -> '{' . StatementList '}'                    (rule 34)

	print          reduce using rule 35
	read           reduce using rule 35
	if             reduce using rule 35
	while          reduce using rule 35
	delete         reduce using rule 35
	return         reduce using rule 35
	id             reduce using rule 35
	'{'            reduce using rule 35
	'}'            reduce using rule 35

	StatementList  goto state 65

State 64

	Function -> fun id Parameters RetType '{' Declarations StatementList '}' .    (rule 18)

	fun            reduce using rule 18
	%eof           reduce using rule 18


State 65

	Block -> '{' StatementList . '}'                    (rule 34)
	StatementList -> StatementList . Statement          (rule 36)

	print          shift, and enter state 56
	read           shift, and enter state 57
	if             shift, and enter state 58
	while          shift, and enter state 59
	delete         shift, and enter state 60
	return         shift, and enter state 61
	id             shift, and enter state 62
	'{'            shift, and enter state 63
	'}'            shift, and enter state 118

	Statement      goto state 45
	Block          goto state 46
	Assignment     goto state 47
	Print          goto state 48
	Read           goto state 49
	Conditional    goto state 50
	Loop           goto state 51
	Delete         goto state 52
	Ret            goto state 53
	Invocation     goto state 54
	LValue         goto state 55

State 66

	Invocation -> id Arguments . ';'                    (rule 50)

	';'            shift, and enter state 117


State 67

	Arguments -> '(' . ')'                              (rule 76)
	Arguments -> '(' . ExprList ')'                     (rule 77)

	true           shift, and enter state 76
	false          shift, and enter state 77
	new            shift, and enter state 78
	null           shift, and enter state 79
	id             shift, and enter state 80
	num            shift, and enter state 81
	'-'            shift, and enter state 82
	'('            shift, and enter state 83
	')'            shift, and enter state 116
	'!'            shift, and enter state 84

	Expression     goto state 114
	Boolterm       goto state 70
	Simple         goto state 71
	Term           goto state 72
	Unary          goto state 73
	Selector       goto state 74
	Factor         goto state 75
	ExprList       goto state 115

State 68

	Ret -> return MaybeExpr . ';'                       (rule 47)

	';'            shift, and enter state 113


State 69

	MaybeExpr -> Expression .                           (rule 49)
	Expression -> Expression . boolOp Boolterm          (rule 54)

	boolOp         shift, and enter state 97
	';'            reduce using rule 49


State 70

	Expression -> Boolterm .                            (rule 53)
	Boolterm -> Boolterm . cmpOp Simple                 (rule 56)

	endl           reduce using rule 53
	boolOp         reduce using rule 53
	cmpOp          shift, and enter state 112
	')'            reduce using rule 53
	';'            reduce using rule 53
	','            reduce using rule 53


State 71

	Boolterm -> Simple .                                (rule 55)
	Simple -> Simple . '+' Term                         (rule 58)
	Simple -> Simple . '-' Term                         (rule 59)

	endl           reduce using rule 55
	boolOp         reduce using rule 55
	cmpOp          reduce using rule 55
	'+'            shift, and enter state 110
	'-'            shift, and enter state 111
	')'            reduce using rule 55
	';'            reduce using rule 55
	','            reduce using rule 55


State 72

	Simple -> Term .                                    (rule 57)
	Term -> Term . '*' Unary                            (rule 61)
	Term -> Term . '/' Unary                            (rule 62)

	endl           reduce using rule 57
	boolOp         reduce using rule 57
	cmpOp          reduce using rule 57
	'+'            reduce using rule 57
	'-'            reduce using rule 57
	'*'            shift, and enter state 108
	'/'            shift, and enter state 109
	')'            reduce using rule 57
	';'            reduce using rule 57
	','            reduce using rule 57


State 73

	Term -> Unary .                                     (rule 60)

	endl           reduce using rule 60
	boolOp         reduce using rule 60
	cmpOp          reduce using rule 60
	'+'            reduce using rule 60
	'-'            reduce using rule 60
	'*'            reduce using rule 60
	'/'            reduce using rule 60
	')'            reduce using rule 60
	';'            reduce using rule 60
	','            reduce using rule 60


State 74

	Unary -> Selector .                                 (rule 63)
	Selector -> Selector . '.' id                       (rule 67)

	endl           reduce using rule 63
	boolOp         reduce using rule 63
	cmpOp          reduce using rule 63
	'+'            reduce using rule 63
	'-'            reduce using rule 63
	'*'            reduce using rule 63
	'/'            reduce using rule 63
	')'            reduce using rule 63
	';'            reduce using rule 63
	','            reduce using rule 63
	'.'            shift, and enter state 107


State 75

	Selector -> Factor .                                (rule 66)

	endl           reduce using rule 66
	boolOp         reduce using rule 66
	cmpOp          reduce using rule 66
	'+'            reduce using rule 66
	'-'            reduce using rule 66
	'*'            reduce using rule 66
	'/'            reduce using rule 66
	')'            reduce using rule 66
	';'            reduce using rule 66
	','            reduce using rule 66
	'.'            reduce using rule 66


State 76

	Factor -> true .                                    (rule 72)

	endl           reduce using rule 72
	boolOp         reduce using rule 72
	cmpOp          reduce using rule 72
	'+'            reduce using rule 72
	'-'            reduce using rule 72
	'*'            reduce using rule 72
	'/'            reduce using rule 72
	')'            reduce using rule 72
	';'            reduce using rule 72
	','            reduce using rule 72
	'.'            reduce using rule 72


State 77

	Factor -> false .                                   (rule 73)

	endl           reduce using rule 73
	boolOp         reduce using rule 73
	cmpOp          reduce using rule 73
	'+'            reduce using rule 73
	'-'            reduce using rule 73
	'*'            reduce using rule 73
	'/'            reduce using rule 73
	')'            reduce using rule 73
	';'            reduce using rule 73
	','            reduce using rule 73
	'.'            reduce using rule 73


State 78

	Factor -> new . id                                  (rule 74)

	id             shift, and enter state 106


State 79

	Factor -> null .                                    (rule 75)

	endl           reduce using rule 75
	boolOp         reduce using rule 75
	cmpOp          reduce using rule 75
	'+'            reduce using rule 75
	'-'            reduce using rule 75
	'*'            reduce using rule 75
	'/'            reduce using rule 75
	')'            reduce using rule 75
	';'            reduce using rule 75
	','            reduce using rule 75
	'.'            reduce using rule 75


State 80

	Factor -> id .                                      (rule 69)
	Factor -> id . Arguments                            (rule 70)

	endl           reduce using rule 69
	boolOp         reduce using rule 69
	cmpOp          reduce using rule 69
	'+'            reduce using rule 69
	'-'            reduce using rule 69
	'*'            reduce using rule 69
	'/'            reduce using rule 69
	'('            shift, and enter state 67
	')'            reduce using rule 69
	';'            reduce using rule 69
	','            reduce using rule 69
	'.'            reduce using rule 69

	Arguments      goto state 105

State 81

	Factor -> num .                                     (rule 71)

	endl           reduce using rule 71
	boolOp         reduce using rule 71
	cmpOp          reduce using rule 71
	'+'            reduce using rule 71
	'-'            reduce using rule 71
	'*'            reduce using rule 71
	'/'            reduce using rule 71
	')'            reduce using rule 71
	';'            reduce using rule 71
	','            reduce using rule 71
	'.'            reduce using rule 71


State 82

	Unary -> '-' . Unary                                (rule 65)

	true           shift, and enter state 76
	false          shift, and enter state 77
	new            shift, and enter state 78
	null           shift, and enter state 79
	id             shift, and enter state 80
	num            shift, and enter state 81
	'-'            shift, and enter state 82
	'('            shift, and enter state 83
	'!'            shift, and enter state 84

	Unary          goto state 104
	Selector       goto state 74
	Factor         goto state 75

State 83

	Factor -> '(' . Expression ')'                      (rule 68)

	true           shift, and enter state 76
	false          shift, and enter state 77
	new            shift, and enter state 78
	null           shift, and enter state 79
	id             shift, and enter state 80
	num            shift, and enter state 81
	'-'            shift, and enter state 82
	'('            shift, and enter state 83
	'!'            shift, and enter state 84

	Expression     goto state 103
	Boolterm       goto state 70
	Simple         goto state 71
	Term           goto state 72
	Unary          goto state 73
	Selector       goto state 74
	Factor         goto state 75

State 84

	Unary -> '!' . Unary                                (rule 64)

	true           shift, and enter state 76
	false          shift, and enter state 77
	new            shift, and enter state 78
	null           shift, and enter state 79
	id             shift, and enter state 80
	num            shift, and enter state 81
	'-'            shift, and enter state 82
	'('            shift, and enter state 83
	'!'            shift, and enter state 84

	Unary          goto state 102
	Selector       goto state 74
	Factor         goto state 75

State 85

	Delete -> delete Expression . ';'                   (rule 46)
	Expression -> Expression . boolOp Boolterm          (rule 54)

	boolOp         shift, and enter state 97
	';'            shift, and enter state 101


State 86

	Loop -> while '(' . Expression ')' Block            (rule 45)

	true           shift, and enter state 76
	false          shift, and enter state 77
	new            shift, and enter state 78
	null           shift, and enter state 79
	id             shift, and enter state 80
	num            shift, and enter state 81
	'-'            shift, and enter state 82
	'('            shift, and enter state 83
	'!'            shift, and enter state 84

	Expression     goto state 100
	Boolterm       goto state 70
	Simple         goto state 71
	Term           goto state 72
	Unary          goto state 73
	Selector       goto state 74
	Factor         goto state 75

State 87

	Conditional -> if '(' . Expression ')' Block ElseBlock    (rule 42)

	true           shift, and enter state 76
	false          shift, and enter state 77
	new            shift, and enter state 78
	null           shift, and enter state 79
	id             shift, and enter state 80
	num            shift, and enter state 81
	'-'            shift, and enter state 82
	'('            shift, and enter state 83
	'!'            shift, and enter state 84

	Expression     goto state 99
	Boolterm       goto state 70
	Simple         goto state 71
	Term           goto state 72
	Unary          goto state 73
	Selector       goto state 74
	Factor         goto state 75

State 88

	Read -> read LValue . ';'                           (rule 41)
	LValue -> LValue . '.' id                           (rule 52)

	';'            shift, and enter state 98
	'.'            shift, and enter state 92


State 89

	LValue -> id .                                      (rule 51)

	';'            reduce using rule 51
	'.'            reduce using rule 51


State 90

	Print -> print Expression . Endl ';'                (rule 38)
	Expression -> Expression . boolOp Boolterm          (rule 54)

	endl           shift, and enter state 96
	boolOp         shift, and enter state 97
	';'            reduce using rule 39

	Endl           goto state 95

State 91

	Assignment -> LValue '=' . Expression ';'           (rule 37)

	true           shift, and enter state 76
	false          shift, and enter state 77
	new            shift, and enter state 78
	null           shift, and enter state 79
	id             shift, and enter state 80
	num            shift, and enter state 81
	'-'            shift, and enter state 82
	'('            shift, and enter state 83
	'!'            shift, and enter state 84

	Expression     goto state 94
	Boolterm       goto state 70
	Simple         goto state 71
	Term           goto state 72
	Unary          goto state 73
	Selector       goto state 74
	Factor         goto state 75

State 92

	LValue -> LValue '.' . id                           (rule 52)

	id             shift, and enter state 93


State 93

	LValue -> LValue '.' id .                           (rule 52)

	'='            reduce using rule 52
	';'            reduce using rule 52
	'.'            reduce using rule 52


State 94

	Assignment -> LValue '=' Expression . ';'           (rule 37)
	Expression -> Expression . boolOp Boolterm          (rule 54)

	boolOp         shift, and enter state 97
	';'            shift, and enter state 132


State 95

	Print -> print Expression Endl . ';'                (rule 38)

	';'            shift, and enter state 131


State 96

	Endl -> endl .                                      (rule 40)

	';'            reduce using rule 40


State 97

	Expression -> Expression boolOp . Boolterm          (rule 54)

	true           shift, and enter state 76
	false          shift, and enter state 77
	new            shift, and enter state 78
	null           shift, and enter state 79
	id             shift, and enter state 80
	num            shift, and enter state 81
	'-'            shift, and enter state 82
	'('            shift, and enter state 83
	'!'            shift, and enter state 84

	Boolterm       goto state 130
	Simple         goto state 71
	Term           goto state 72
	Unary          goto state 73
	Selector       goto state 74
	Factor         goto state 75

State 98

	Read -> read LValue ';' .                           (rule 41)

	print          reduce using rule 41
	read           reduce using rule 41
	if             reduce using rule 41
	while          reduce using rule 41
	delete         reduce using rule 41
	return         reduce using rule 41
	id             reduce using rule 41
	'{'            reduce using rule 41
	'}'            reduce using rule 41


State 99

	Conditional -> if '(' Expression . ')' Block ElseBlock    (rule 42)
	Expression -> Expression . boolOp Boolterm          (rule 54)

	boolOp         shift, and enter state 97
	')'            shift, and enter state 129


State 100

	Loop -> while '(' Expression . ')' Block            (rule 45)
	Expression -> Expression . boolOp Boolterm          (rule 54)

	boolOp         shift, and enter state 97
	')'            shift, and enter state 128


State 101

	Delete -> delete Expression ';' .                   (rule 46)

	print          reduce using rule 46
	read           reduce using rule 46
	if             reduce using rule 46
	while          reduce using rule 46
	delete         reduce using rule 46
	return         reduce using rule 46
	id             reduce using rule 46
	'{'            reduce using rule 46
	'}'            reduce using rule 46


State 102

	Unary -> '!' Unary .                                (rule 64)

	endl           reduce using rule 64
	boolOp         reduce using rule 64
	cmpOp          reduce using rule 64
	'+'            reduce using rule 64
	'-'            reduce using rule 64
	'*'            reduce using rule 64
	'/'            reduce using rule 64
	')'            reduce using rule 64
	';'            reduce using rule 64
	','            reduce using rule 64


State 103

	Expression -> Expression . boolOp Boolterm          (rule 54)
	Factor -> '(' Expression . ')'                      (rule 68)

	boolOp         shift, and enter state 97
	')'            shift, and enter state 127


State 104

	Unary -> '-' Unary .                                (rule 65)

	endl           reduce using rule 65
	boolOp         reduce using rule 65
	cmpOp          reduce using rule 65
	'+'            reduce using rule 65
	'-'            reduce using rule 65
	'*'            reduce using rule 65
	'/'            reduce using rule 65
	')'            reduce using rule 65
	';'            reduce using rule 65
	','            reduce using rule 65


State 105

	Factor -> id Arguments .                            (rule 70)

	endl           reduce using rule 70
	boolOp         reduce using rule 70
	cmpOp          reduce using rule 70
	'+'            reduce using rule 70
	'-'            reduce using rule 70
	'*'            reduce using rule 70
	'/'            reduce using rule 70
	')'            reduce using rule 70
	';'            reduce using rule 70
	','            reduce using rule 70
	'.'            reduce using rule 70


State 106

	Factor -> new id .                                  (rule 74)

	endl           reduce using rule 74
	boolOp         reduce using rule 74
	cmpOp          reduce using rule 74
	'+'            reduce using rule 74
	'-'            reduce using rule 74
	'*'            reduce using rule 74
	'/'            reduce using rule 74
	')'            reduce using rule 74
	';'            reduce using rule 74
	','            reduce using rule 74
	'.'            reduce using rule 74


State 107

	Selector -> Selector '.' . id                       (rule 67)

	id             shift, and enter state 126


State 108

	Term -> Term '*' . Unary                            (rule 61)

	true           shift, and enter state 76
	false          shift, and enter state 77
	new            shift, and enter state 78
	null           shift, and enter state 79
	id             shift, and enter state 80
	num            shift, and enter state 81
	'-'            shift, and enter state 82
	'('            shift, and enter state 83
	'!'            shift, and enter state 84

	Unary          goto state 125
	Selector       goto state 74
	Factor         goto state 75

State 109

	Term -> Term '/' . Unary                            (rule 62)

	true           shift, and enter state 76
	false          shift, and enter state 77
	new            shift, and enter state 78
	null           shift, and enter state 79
	id             shift, and enter state 80
	num            shift, and enter state 81
	'-'            shift, and enter state 82
	'('            shift, and enter state 83
	'!'            shift, and enter state 84

	Unary          goto state 124
	Selector       goto state 74
	Factor         goto state 75

State 110

	Simple -> Simple '+' . Term                         (rule 58)

	true           shift, and enter state 76
	false          shift, and enter state 77
	new            shift, and enter state 78
	null           shift, and enter state 79
	id             shift, and enter state 80
	num            shift, and enter state 81
	'-'            shift, and enter state 82
	'('            shift, and enter state 83
	'!'            shift, and enter state 84

	Term           goto state 123
	Unary          goto state 73
	Selector       goto state 74
	Factor         goto state 75

State 111

	Simple -> Simple '-' . Term                         (rule 59)

	true           shift, and enter state 76
	false          shift, and enter state 77
	new            shift, and enter state 78
	null           shift, and enter state 79
	id             shift, and enter state 80
	num            shift, and enter state 81
	'-'            shift, and enter state 82
	'('            shift, and enter state 83
	'!'            shift, and enter state 84

	Term           goto state 122
	Unary          goto state 73
	Selector       goto state 74
	Factor         goto state 75

State 112

	Boolterm -> Boolterm cmpOp . Simple                 (rule 56)

	true           shift, and enter state 76
	false          shift, and enter state 77
	new            shift, and enter state 78
	null           shift, and enter state 79
	id             shift, and enter state 80
	num            shift, and enter state 81
	'-'            shift, and enter state 82
	'('            shift, and enter state 83
	'!'            shift, and enter state 84

	Simple         goto state 121
	Term           goto state 72
	Unary          goto state 73
	Selector       goto state 74
	Factor         goto state 75

State 113

	Ret -> return MaybeExpr ';' .                       (rule 47)

	print          reduce using rule 47
	read           reduce using rule 47
	if             reduce using rule 47
	while          reduce using rule 47
	delete         reduce using rule 47
	return         reduce using rule 47
	id             reduce using rule 47
	'{'            reduce using rule 47
	'}'            reduce using rule 47


State 114

	Expression -> Expression . boolOp Boolterm          (rule 54)
	ExprList -> Expression .                            (rule 78)

	boolOp         shift, and enter state 97
	')'            reduce using rule 78
	','            reduce using rule 78


State 115

	Arguments -> '(' ExprList . ')'                     (rule 77)
	ExprList -> ExprList . ',' Expression               (rule 79)

	')'            shift, and enter state 119
	','            shift, and enter state 120


State 116

	Arguments -> '(' ')' .                              (rule 76)

	endl           reduce using rule 76
	boolOp         reduce using rule 76
	cmpOp          reduce using rule 76
	'+'            reduce using rule 76
	'-'            reduce using rule 76
	'*'            reduce using rule 76
	'/'            reduce using rule 76
	')'            reduce using rule 76
	';'            reduce using rule 76
	','            reduce using rule 76
	'.'            reduce using rule 76


State 117

	Invocation -> id Arguments ';' .                    (rule 50)

	print          reduce using rule 50
	read           reduce using rule 50
	if             reduce using rule 50
	while          reduce using rule 50
	delete         reduce using rule 50
	return         reduce using rule 50
	id             reduce using rule 50
	'{'            reduce using rule 50
	'}'            reduce using rule 50


State 118

	Block -> '{' StatementList '}' .                    (rule 34)

	print          reduce using rule 34
	read           reduce using rule 34
	if             reduce using rule 34
	else           reduce using rule 34
	while          reduce using rule 34
	delete         reduce using rule 34
	return         reduce using rule 34
	id             reduce using rule 34
	'{'            reduce using rule 34
	'}'            reduce using rule 34


State 119

	Arguments -> '(' ExprList ')' .                     (rule 77)

	endl           reduce using rule 77
	boolOp         reduce using rule 77
	cmpOp          reduce using rule 77
	'+'            reduce using rule 77
	'-'            reduce using rule 77
	'*'            reduce using rule 77
	'/'            reduce using rule 77
	')'            reduce using rule 77
	';'            reduce using rule 77
	','            reduce using rule 77
	'.'            reduce using rule 77


State 120

	ExprList -> ExprList ',' . Expression               (rule 79)

	true           shift, and enter state 76
	false          shift, and enter state 77
	new            shift, and enter state 78
	null           shift, and enter state 79
	id             shift, and enter state 80
	num            shift, and enter state 81
	'-'            shift, and enter state 82
	'('            shift, and enter state 83
	'!'            shift, and enter state 84

	Expression     goto state 135
	Boolterm       goto state 70
	Simple         goto state 71
	Term           goto state 72
	Unary          goto state 73
	Selector       goto state 74
	Factor         goto state 75

State 121

	Boolterm -> Boolterm cmpOp Simple .                 (rule 56)
	Simple -> Simple . '+' Term                         (rule 58)
	Simple -> Simple . '-' Term                         (rule 59)

	endl           reduce using rule 56
	boolOp         reduce using rule 56
	cmpOp          reduce using rule 56
	'+'            shift, and enter state 110
	'-'            shift, and enter state 111
	')'            reduce using rule 56
	';'            reduce using rule 56
	','            reduce using rule 56


State 122

	Simple -> Simple '-' Term .                         (rule 59)
	Term -> Term . '*' Unary                            (rule 61)
	Term -> Term . '/' Unary                            (rule 62)

	endl           reduce using rule 59
	boolOp         reduce using rule 59
	cmpOp          reduce using rule 59
	'+'            reduce using rule 59
	'-'            reduce using rule 59
	'*'            shift, and enter state 108
	'/'            shift, and enter state 109
	')'            reduce using rule 59
	';'            reduce using rule 59
	','            reduce using rule 59


State 123

	Simple -> Simple '+' Term .                         (rule 58)
	Term -> Term . '*' Unary                            (rule 61)
	Term -> Term . '/' Unary                            (rule 62)

	endl           reduce using rule 58
	boolOp         reduce using rule 58
	cmpOp          reduce using rule 58
	'+'            reduce using rule 58
	'-'            reduce using rule 58
	'*'            shift, and enter state 108
	'/'            shift, and enter state 109
	')'            reduce using rule 58
	';'            reduce using rule 58
	','            reduce using rule 58


State 124

	Term -> Term '/' Unary .                            (rule 62)

	endl           reduce using rule 62
	boolOp         reduce using rule 62
	cmpOp          reduce using rule 62
	'+'            reduce using rule 62
	'-'            reduce using rule 62
	'*'            reduce using rule 62
	'/'            reduce using rule 62
	')'            reduce using rule 62
	';'            reduce using rule 62
	','            reduce using rule 62


State 125

	Term -> Term '*' Unary .                            (rule 61)

	endl           reduce using rule 61
	boolOp         reduce using rule 61
	cmpOp          reduce using rule 61
	'+'            reduce using rule 61
	'-'            reduce using rule 61
	'*'            reduce using rule 61
	'/'            reduce using rule 61
	')'            reduce using rule 61
	';'            reduce using rule 61
	','            reduce using rule 61


State 126

	Selector -> Selector '.' id .                       (rule 67)

	endl           reduce using rule 67
	boolOp         reduce using rule 67
	cmpOp          reduce using rule 67
	'+'            reduce using rule 67
	'-'            reduce using rule 67
	'*'            reduce using rule 67
	'/'            reduce using rule 67
	')'            reduce using rule 67
	';'            reduce using rule 67
	','            reduce using rule 67
	'.'            reduce using rule 67


State 127

	Factor -> '(' Expression ')' .                      (rule 68)

	endl           reduce using rule 68
	boolOp         reduce using rule 68
	cmpOp          reduce using rule 68
	'+'            reduce using rule 68
	'-'            reduce using rule 68
	'*'            reduce using rule 68
	'/'            reduce using rule 68
	')'            reduce using rule 68
	';'            reduce using rule 68
	','            reduce using rule 68
	'.'            reduce using rule 68


State 128

	Loop -> while '(' Expression ')' . Block            (rule 45)

	'{'            shift, and enter state 63

	Block          goto state 134

State 129

	Conditional -> if '(' Expression ')' . Block ElseBlock    (rule 42)

	'{'            shift, and enter state 63

	Block          goto state 133

State 130

	Expression -> Expression boolOp Boolterm .          (rule 54)
	Boolterm -> Boolterm . cmpOp Simple                 (rule 56)

	endl           reduce using rule 54
	boolOp         reduce using rule 54
	cmpOp          shift, and enter state 112
	')'            reduce using rule 54
	';'            reduce using rule 54
	','            reduce using rule 54


State 131

	Print -> print Expression Endl ';' .                (rule 38)

	print          reduce using rule 38
	read           reduce using rule 38
	if             reduce using rule 38
	while          reduce using rule 38
	delete         reduce using rule 38
	return         reduce using rule 38
	id             reduce using rule 38
	'{'            reduce using rule 38
	'}'            reduce using rule 38


State 132

	Assignment -> LValue '=' Expression ';' .           (rule 37)

	print          reduce using rule 37
	read           reduce using rule 37
	if             reduce using rule 37
	while          reduce using rule 37
	delete         reduce using rule 37
	return         reduce using rule 37
	id             reduce using rule 37
	'{'            reduce using rule 37
	'}'            reduce using rule 37


State 133

	Conditional -> if '(' Expression ')' Block . ElseBlock    (rule 42)

	print          reduce using rule 43
	read           reduce using rule 43
	if             reduce using rule 43
	else           shift, and enter state 137
	while          reduce using rule 43
	delete         reduce using rule 43
	return         reduce using rule 43
	id             reduce using rule 43
	'{'            reduce using rule 43
	'}'            reduce using rule 43

	ElseBlock      goto state 136

State 134

	Loop -> while '(' Expression ')' Block .            (rule 45)

	print          reduce using rule 45
	read           reduce using rule 45
	if             reduce using rule 45
	while          reduce using rule 45
	delete         reduce using rule 45
	return         reduce using rule 45
	id             reduce using rule 45
	'{'            reduce using rule 45
	'}'            reduce using rule 45


State 135

	Expression -> Expression . boolOp Boolterm          (rule 54)
	ExprList -> ExprList ',' Expression .               (rule 79)

	boolOp         shift, and enter state 97
	')'            reduce using rule 79
	','            reduce using rule 79


State 136

	Conditional -> if '(' Expression ')' Block ElseBlock .    (rule 42)

	print          reduce using rule 42
	read           reduce using rule 42
	if             reduce using rule 42
	while          reduce using rule 42
	delete         reduce using rule 42
	return         reduce using rule 42
	id             reduce using rule 42
	'{'            reduce using rule 42
	'}'            reduce using rule 42


State 137

	ElseBlock -> else . Block                           (rule 44)

	'{'            shift, and enter state 63

	Block          goto state 138

State 138

	ElseBlock -> else Block .                           (rule 44)

	print          reduce using rule 44
	read           reduce using rule 44
	if             reduce using rule 44
	while          reduce using rule 44
	delete         reduce using rule 44
	return         reduce using rule 44
	id             reduce using rule 44
	'{'            reduce using rule 44
	'}'            reduce using rule 44


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 80
Number of terminals: 34
Number of non-terminals: 39
Number of states: 139
