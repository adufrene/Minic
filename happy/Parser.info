-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.5 from Parser.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_calc -> Program                             (0)
	Program -> TypeDecls Functions                     (1)
	TypeDecls ->                                       (2)
	TypeDecls -> TypeDecls TypeDecl                    (3)
	TypeDecl -> struct id TypeOrDec                    (4)
	TypeDecl -> DecType IdList ';'                     (5)
	NestedDecl ->                                      (6)
	NestedDecl -> NestedDecl Decl ';'                  (7)
	Decl -> Type id                                    (8)
	Type -> int                                        (9)
	Type -> bool                                       (10)
	Type -> struct id                                  (11)
	DecType -> int                                     (12)
	DecType -> bool                                    (13)
	TypeOrDec -> '{' NestedDecl '}' ';'                (14)
	TypeOrDec -> IdList ';'                            (15)
	Declarations ->                                    (16)
	Declarations -> Declarations Declaration           (17)
	Declaration -> Type IdList ';'                     (18)
	IdList -> id                                       (19)
	IdList -> IdList ',' id                            (20)
	Functions ->                                       (21)
	Functions -> Functions Function                    (22)
	Function -> fun id Parameters RetType '{' Declarations StatementList '}'   (23)
	Parameters -> '(' ')'                              (24)
	Parameters -> '(' DeclList ')'                     (25)
	DeclList -> Decl                                   (26)
	DeclList -> DeclList ',' Decl                      (27)
	RetType -> Type                                    (28)
	RetType -> void                                    (29)
	Statement -> Block                                 (30)
	Statement -> Assignment                            (31)
	Statement -> Print                                 (32)
	Statement -> Read                                  (33)
	Statement -> Conditional                           (34)
	Statement -> Loop                                  (35)
	Statement -> Delete                                (36)
	Statement -> Ret                                   (37)
	Statement -> Invocation                            (38)
	Block -> '{' StatementList '}'                     (39)
	StatementList ->                                   (40)
	StatementList -> StatementList Statement           (41)
	Assignment -> LValue '=' Expression ';'            (42)
	Print -> print Expression Endl ';'                 (43)
	Endl ->                                            (44)
	Endl -> endl                                       (45)
	Read -> read LValue ';'                            (46)
	Conditional -> if '(' Expression ')' Block ElseBlock   (47)
	ElseBlock ->                                       (48)
	ElseBlock -> else Block                            (49)
	Loop -> while '(' Expression ')' Block             (50)
	Delete -> delete Expression ';'                    (51)
	Ret -> return MaybeExpr ';'                        (52)
	MaybeExpr ->                                       (53)
	MaybeExpr -> Expression                            (54)
	Invocation -> id Arguments ';'                     (55)
	LValue -> id                                       (56)
	LValue -> LValue '.' id                            (57)
	Expression -> Boolterm                             (58)
	Expression -> Expression boolOp Boolterm           (59)
	Boolterm -> Simple                                 (60)
	Boolterm -> Boolterm cmpOp Simple                  (61)
	Simple -> Term                                     (62)
	Simple -> Simple '+' Term                          (63)
	Simple -> Simple '-' Term                          (64)
	Term -> Unary                                      (65)
	Term -> Term '*' Unary                             (66)
	Term -> Term '/' Unary                             (67)
	Unary -> Selector                                  (68)
	Unary -> '!' Unary                                 (69)
	Unary -> '-' Unary                                 (70)
	Selector -> Factor                                 (71)
	Selector -> Selector '.' id                        (72)
	Factor -> '(' Expression ')'                       (73)
	Factor -> id                                       (74)
	Factor -> id Arguments                             (75)
	Factor -> num                                      (76)
	Factor -> true                                     (77)
	Factor -> false                                    (78)
	Factor -> new id                                   (79)
	Factor -> null                                     (80)
	Arguments -> '(' ')'                               (81)
	Arguments -> '(' ExprList ')'                      (82)
	ExprList -> Expression                             (83)
	ExprList -> ExprList ',' Expression                (84)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	struct         { TokenStruct }
	int            { TokenInt }
	bool           { TokenBool }
	fun            { TokenFun }
	void           { TokenVoid }
	print          { TokenPrint }
	endl           { TokenEndl }
	read           { TokenRead }
	if             { TokenIf }
	else           { TokenElse }
	while          { TokenWhile }
	delete         { TokenDelete }
	return         { TokenReturn }
	true           { TokenTrue }
	false          { TokenFalse }
	new            { TokenNew }
	null           { TokenNull }
	id             { TokenId $$ }
	boolOp         { TokenBoolOp $$ }
	cmpOp          { TokenCmpOp $$ }
	num            { TokenNum $$ }
	'='            { TokenEq }
	'+'            { TokenPlus }
	'-'            { TokenMinus }
	'*'            { TokenTimes }
	'/'            { TokenDiv }
	'('            { TokenOB }
	')'            { TokenCB }
	'{'            { TokenLBrace }
	'}'            { TokenRBrace }
	';'            { TokenSemi }
	','            { TokenComma }
	'.'            { TokenDot }
	'!'            { TokenBang }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_calc     rule  0
	Program         rule  1
	TypeDecls       rules 2, 3
	TypeDecl        rules 4, 5
	NestedDecl      rules 6, 7
	Decl            rule  8
	Type            rules 9, 10, 11
	DecType         rules 12, 13
	TypeOrDec       rules 14, 15
	Declarations    rules 16, 17
	Declaration     rule  18
	IdList          rules 19, 20
	Functions       rules 21, 22
	Function        rule  23
	Parameters      rules 24, 25
	DeclList        rules 26, 27
	RetType         rules 28, 29
	Statement       rules 30, 31, 32, 33, 34, 35, 36, 37, 38
	Block           rule  39
	StatementList   rules 40, 41
	Assignment      rule  42
	Print           rule  43
	Endl            rules 44, 45
	Read            rule  46
	Conditional     rule  47
	ElseBlock       rules 48, 49
	Loop            rule  50
	Delete          rule  51
	Ret             rule  52
	MaybeExpr       rules 53, 54
	Invocation      rule  55
	LValue          rules 56, 57
	Expression      rules 58, 59
	Boolterm        rules 60, 61
	Simple          rules 62, 63, 64
	Term            rules 65, 66, 67
	Unary           rules 68, 69, 70
	Selector        rules 71, 72
	Factor          rules 73, 74, 75, 76, 77, 78, 79, 80
	Arguments       rules 81, 82
	ExprList        rules 83, 84

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	struct         reduce using rule 2
	int            reduce using rule 2
	bool           reduce using rule 2
	fun            reduce using rule 2
	%eof           reduce using rule 2

	Program        goto state 3
	TypeDecls      goto state 2

State 1



	TypeDecls      goto state 2

State 2

	Program -> TypeDecls . Functions                    (rule 1)
	TypeDecls -> TypeDecls . TypeDecl                   (rule 3)

	struct         shift, and enter state 7
	int            shift, and enter state 8
	bool           shift, and enter state 9
	fun            reduce using rule 21
	%eof           reduce using rule 21

	TypeDecl       goto state 4
	DecType        goto state 5
	Functions      goto state 6

State 3

	%start_calc -> Program .                            (rule 0)

	%eof           accept


State 4

	TypeDecls -> TypeDecls TypeDecl .                   (rule 3)

	struct         reduce using rule 3
	int            reduce using rule 3
	bool           reduce using rule 3
	fun            reduce using rule 3
	%eof           reduce using rule 3


State 5

	TypeDecl -> DecType . IdList ';'                    (rule 5)

	id             shift, and enter state 14

	IdList         goto state 13

State 6

	Program -> TypeDecls Functions .                    (rule 1)
	Functions -> Functions . Function                   (rule 22)

	fun            shift, and enter state 12
	%eof           reduce using rule 1

	Function       goto state 11

State 7

	TypeDecl -> struct . id TypeOrDec                   (rule 4)

	id             shift, and enter state 10


State 8

	DecType -> int .                                    (rule 12)

	id             reduce using rule 12


State 9

	DecType -> bool .                                   (rule 13)

	id             reduce using rule 13


State 10

	TypeDecl -> struct id . TypeOrDec                   (rule 4)

	id             shift, and enter state 14
	'{'            shift, and enter state 20

	TypeOrDec      goto state 18
	IdList         goto state 19

State 11

	Functions -> Functions Function .                   (rule 22)

	fun            reduce using rule 22
	%eof           reduce using rule 22


State 12

	Function -> fun . id Parameters RetType '{' Declarations StatementList '}'    (rule 23)

	id             shift, and enter state 17


State 13

	TypeDecl -> DecType IdList . ';'                    (rule 5)
	IdList -> IdList . ',' id                           (rule 20)

	';'            shift, and enter state 15
	','            shift, and enter state 16


State 14

	IdList -> id .                                      (rule 19)

	';'            reduce using rule 19
	','            reduce using rule 19


State 15

	TypeDecl -> DecType IdList ';' .                    (rule 5)

	struct         reduce using rule 5
	int            reduce using rule 5
	bool           reduce using rule 5
	fun            reduce using rule 5
	%eof           reduce using rule 5


State 16

	IdList -> IdList ',' . id                           (rule 20)

	id             shift, and enter state 25


State 17

	Function -> fun id . Parameters RetType '{' Declarations StatementList '}'    (rule 23)

	'('            shift, and enter state 24

	Parameters     goto state 23

State 18

	TypeDecl -> struct id TypeOrDec .                   (rule 4)

	struct         reduce using rule 4
	int            reduce using rule 4
	bool           reduce using rule 4
	fun            reduce using rule 4
	%eof           reduce using rule 4


State 19

	TypeOrDec -> IdList . ';'                           (rule 15)
	IdList -> IdList . ',' id                           (rule 20)

	';'            shift, and enter state 22
	','            shift, and enter state 16


State 20

	TypeOrDec -> '{' . NestedDecl '}' ';'               (rule 14)

	struct         reduce using rule 6
	int            reduce using rule 6
	bool           reduce using rule 6
	'}'            reduce using rule 6

	NestedDecl     goto state 21

State 21

	NestedDecl -> NestedDecl . Decl ';'                 (rule 7)
	TypeOrDec -> '{' NestedDecl . '}' ';'               (rule 14)

	struct         shift, and enter state 29
	int            shift, and enter state 30
	bool           shift, and enter state 31
	'}'            shift, and enter state 37

	Decl           goto state 36
	Type           goto state 27

State 22

	TypeOrDec -> IdList ';' .                           (rule 15)

	struct         reduce using rule 15
	int            reduce using rule 15
	bool           reduce using rule 15
	fun            reduce using rule 15
	%eof           reduce using rule 15


State 23

	Function -> fun id Parameters . RetType '{' Declarations StatementList '}'    (rule 23)

	struct         shift, and enter state 29
	int            shift, and enter state 30
	bool           shift, and enter state 31
	void           shift, and enter state 35

	Type           goto state 33
	RetType        goto state 34

State 24

	Parameters -> '(' . ')'                             (rule 24)
	Parameters -> '(' . DeclList ')'                    (rule 25)

	struct         shift, and enter state 29
	int            shift, and enter state 30
	bool           shift, and enter state 31
	')'            shift, and enter state 32

	Decl           goto state 26
	Type           goto state 27
	DeclList       goto state 28

State 25

	IdList -> IdList ',' id .                           (rule 20)

	';'            reduce using rule 20
	','            reduce using rule 20


State 26

	DeclList -> Decl .                                  (rule 26)

	')'            reduce using rule 26
	','            reduce using rule 26


State 27

	Decl -> Type . id                                   (rule 8)

	id             shift, and enter state 44


State 28

	Parameters -> '(' DeclList . ')'                    (rule 25)
	DeclList -> DeclList . ',' Decl                     (rule 27)

	')'            shift, and enter state 42
	','            shift, and enter state 43


State 29

	Type -> struct . id                                 (rule 11)

	id             shift, and enter state 41


State 30

	Type -> int .                                       (rule 9)

	id             reduce using rule 9
	'{'            reduce using rule 9


State 31

	Type -> bool .                                      (rule 10)

	id             reduce using rule 10
	'{'            reduce using rule 10


State 32

	Parameters -> '(' ')' .                             (rule 24)

	struct         reduce using rule 24
	int            reduce using rule 24
	bool           reduce using rule 24
	void           reduce using rule 24


State 33

	RetType -> Type .                                   (rule 28)

	'{'            reduce using rule 28


State 34

	Function -> fun id Parameters RetType . '{' Declarations StatementList '}'    (rule 23)

	'{'            shift, and enter state 40


State 35

	RetType -> void .                                   (rule 29)

	'{'            reduce using rule 29


State 36

	NestedDecl -> NestedDecl Decl . ';'                 (rule 7)

	';'            shift, and enter state 39


State 37

	TypeOrDec -> '{' NestedDecl '}' . ';'               (rule 14)

	';'            shift, and enter state 38


State 38

	TypeOrDec -> '{' NestedDecl '}' ';' .               (rule 14)

	struct         reduce using rule 14
	int            reduce using rule 14
	bool           reduce using rule 14
	fun            reduce using rule 14
	%eof           reduce using rule 14


State 39

	NestedDecl -> NestedDecl Decl ';' .                 (rule 7)

	struct         reduce using rule 7
	int            reduce using rule 7
	bool           reduce using rule 7
	'}'            reduce using rule 7


State 40

	Function -> fun id Parameters RetType '{' . Declarations StatementList '}'    (rule 23)

	struct         reduce using rule 16
	int            reduce using rule 16
	bool           reduce using rule 16
	print          reduce using rule 16
	read           reduce using rule 16
	if             reduce using rule 16
	while          reduce using rule 16
	delete         reduce using rule 16
	return         reduce using rule 16
	id             reduce using rule 16
	'{'            reduce using rule 16
	'}'            reduce using rule 16

	Declarations   goto state 46

State 41

	Type -> struct id .                                 (rule 11)

	id             reduce using rule 11
	'{'            reduce using rule 11


State 42

	Parameters -> '(' DeclList ')' .                    (rule 25)

	struct         reduce using rule 25
	int            reduce using rule 25
	bool           reduce using rule 25
	void           reduce using rule 25


State 43

	DeclList -> DeclList ',' . Decl                     (rule 27)

	struct         shift, and enter state 29
	int            shift, and enter state 30
	bool           shift, and enter state 31

	Decl           goto state 45
	Type           goto state 27

State 44

	Decl -> Type id .                                   (rule 8)

	')'            reduce using rule 8
	';'            reduce using rule 8
	','            reduce using rule 8


State 45

	DeclList -> DeclList ',' Decl .                     (rule 27)

	')'            reduce using rule 27
	','            reduce using rule 27


State 46

	Declarations -> Declarations . Declaration          (rule 17)
	Function -> fun id Parameters RetType '{' Declarations . StatementList '}'    (rule 23)

	struct         shift, and enter state 29
	int            shift, and enter state 30
	bool           shift, and enter state 31
	print          reduce using rule 40
	read           reduce using rule 40
	if             reduce using rule 40
	while          reduce using rule 40
	delete         reduce using rule 40
	return         reduce using rule 40
	id             reduce using rule 40
	'{'            reduce using rule 40
	'}'            reduce using rule 40

	Type           goto state 47
	Declaration    goto state 48
	StatementList  goto state 49

State 47

	Declaration -> Type . IdList ';'                    (rule 18)

	id             shift, and enter state 14

	IdList         goto state 70

State 48

	Declarations -> Declarations Declaration .          (rule 17)

	struct         reduce using rule 17
	int            reduce using rule 17
	bool           reduce using rule 17
	print          reduce using rule 17
	read           reduce using rule 17
	if             reduce using rule 17
	while          reduce using rule 17
	delete         reduce using rule 17
	return         reduce using rule 17
	id             reduce using rule 17
	'{'            reduce using rule 17
	'}'            reduce using rule 17


State 49

	Function -> fun id Parameters RetType '{' Declarations StatementList . '}'    (rule 23)
	StatementList -> StatementList . Statement          (rule 41)

	print          shift, and enter state 61
	read           shift, and enter state 62
	if             shift, and enter state 63
	while          shift, and enter state 64
	delete         shift, and enter state 65
	return         shift, and enter state 66
	id             shift, and enter state 67
	'{'            shift, and enter state 68
	'}'            shift, and enter state 69

	Statement      goto state 50
	Block          goto state 51
	Assignment     goto state 52
	Print          goto state 53
	Read           goto state 54
	Conditional    goto state 55
	Loop           goto state 56
	Delete         goto state 57
	Ret            goto state 58
	Invocation     goto state 59
	LValue         goto state 60

State 50

	StatementList -> StatementList Statement .          (rule 41)

	print          reduce using rule 41
	read           reduce using rule 41
	if             reduce using rule 41
	while          reduce using rule 41
	delete         reduce using rule 41
	return         reduce using rule 41
	id             reduce using rule 41
	'{'            reduce using rule 41
	'}'            reduce using rule 41


State 51

	Statement -> Block .                                (rule 30)

	print          reduce using rule 30
	read           reduce using rule 30
	if             reduce using rule 30
	while          reduce using rule 30
	delete         reduce using rule 30
	return         reduce using rule 30
	id             reduce using rule 30
	'{'            reduce using rule 30
	'}'            reduce using rule 30


State 52

	Statement -> Assignment .                           (rule 31)

	print          reduce using rule 31
	read           reduce using rule 31
	if             reduce using rule 31
	while          reduce using rule 31
	delete         reduce using rule 31
	return         reduce using rule 31
	id             reduce using rule 31
	'{'            reduce using rule 31
	'}'            reduce using rule 31


State 53

	Statement -> Print .                                (rule 32)

	print          reduce using rule 32
	read           reduce using rule 32
	if             reduce using rule 32
	while          reduce using rule 32
	delete         reduce using rule 32
	return         reduce using rule 32
	id             reduce using rule 32
	'{'            reduce using rule 32
	'}'            reduce using rule 32


State 54

	Statement -> Read .                                 (rule 33)

	print          reduce using rule 33
	read           reduce using rule 33
	if             reduce using rule 33
	while          reduce using rule 33
	delete         reduce using rule 33
	return         reduce using rule 33
	id             reduce using rule 33
	'{'            reduce using rule 33
	'}'            reduce using rule 33


State 55

	Statement -> Conditional .                          (rule 34)

	print          reduce using rule 34
	read           reduce using rule 34
	if             reduce using rule 34
	while          reduce using rule 34
	delete         reduce using rule 34
	return         reduce using rule 34
	id             reduce using rule 34
	'{'            reduce using rule 34
	'}'            reduce using rule 34


State 56

	Statement -> Loop .                                 (rule 35)

	print          reduce using rule 35
	read           reduce using rule 35
	if             reduce using rule 35
	while          reduce using rule 35
	delete         reduce using rule 35
	return         reduce using rule 35
	id             reduce using rule 35
	'{'            reduce using rule 35
	'}'            reduce using rule 35


State 57

	Statement -> Delete .                               (rule 36)

	print          reduce using rule 36
	read           reduce using rule 36
	if             reduce using rule 36
	while          reduce using rule 36
	delete         reduce using rule 36
	return         reduce using rule 36
	id             reduce using rule 36
	'{'            reduce using rule 36
	'}'            reduce using rule 36


State 58

	Statement -> Ret .                                  (rule 37)

	print          reduce using rule 37
	read           reduce using rule 37
	if             reduce using rule 37
	while          reduce using rule 37
	delete         reduce using rule 37
	return         reduce using rule 37
	id             reduce using rule 37
	'{'            reduce using rule 37
	'}'            reduce using rule 37


State 59

	Statement -> Invocation .                           (rule 38)

	print          reduce using rule 38
	read           reduce using rule 38
	if             reduce using rule 38
	while          reduce using rule 38
	delete         reduce using rule 38
	return         reduce using rule 38
	id             reduce using rule 38
	'{'            reduce using rule 38
	'}'            reduce using rule 38


State 60

	Assignment -> LValue . '=' Expression ';'           (rule 42)
	LValue -> LValue . '.' id                           (rule 57)

	'='            shift, and enter state 98
	'.'            shift, and enter state 99


State 61

	Print -> print . Expression Endl ';'                (rule 43)

	true           shift, and enter state 83
	false          shift, and enter state 84
	new            shift, and enter state 85
	null           shift, and enter state 86
	id             shift, and enter state 87
	num            shift, and enter state 88
	'-'            shift, and enter state 89
	'('            shift, and enter state 90
	'!'            shift, and enter state 91

	Expression     goto state 97
	Boolterm       goto state 77
	Simple         goto state 78
	Term           goto state 79
	Unary          goto state 80
	Selector       goto state 81
	Factor         goto state 82

State 62

	Read -> read . LValue ';'                           (rule 46)

	id             shift, and enter state 96

	LValue         goto state 95

State 63

	Conditional -> if . '(' Expression ')' Block ElseBlock    (rule 47)

	'('            shift, and enter state 94


State 64

	Loop -> while . '(' Expression ')' Block            (rule 50)

	'('            shift, and enter state 93


State 65

	Delete -> delete . Expression ';'                   (rule 51)

	true           shift, and enter state 83
	false          shift, and enter state 84
	new            shift, and enter state 85
	null           shift, and enter state 86
	id             shift, and enter state 87
	num            shift, and enter state 88
	'-'            shift, and enter state 89
	'('            shift, and enter state 90
	'!'            shift, and enter state 91

	Expression     goto state 92
	Boolterm       goto state 77
	Simple         goto state 78
	Term           goto state 79
	Unary          goto state 80
	Selector       goto state 81
	Factor         goto state 82

State 66

	Ret -> return . MaybeExpr ';'                       (rule 52)

	true           shift, and enter state 83
	false          shift, and enter state 84
	new            shift, and enter state 85
	null           shift, and enter state 86
	id             shift, and enter state 87
	num            shift, and enter state 88
	'-'            shift, and enter state 89
	'('            shift, and enter state 90
	';'            reduce using rule 53
	'!'            shift, and enter state 91

	MaybeExpr      goto state 75
	Expression     goto state 76
	Boolterm       goto state 77
	Simple         goto state 78
	Term           goto state 79
	Unary          goto state 80
	Selector       goto state 81
	Factor         goto state 82

State 67

	Invocation -> id . Arguments ';'                    (rule 55)
	LValue -> id .                                      (rule 56)

	'='            reduce using rule 56
	'('            shift, and enter state 74
	'.'            reduce using rule 56

	Arguments      goto state 73

State 68

	Block -> '{' . StatementList '}'                    (rule 39)

	print          reduce using rule 40
	read           reduce using rule 40
	if             reduce using rule 40
	while          reduce using rule 40
	delete         reduce using rule 40
	return         reduce using rule 40
	id             reduce using rule 40
	'{'            reduce using rule 40
	'}'            reduce using rule 40

	StatementList  goto state 72

State 69

	Function -> fun id Parameters RetType '{' Declarations StatementList '}' .    (rule 23)

	fun            reduce using rule 23
	%eof           reduce using rule 23


State 70

	Declaration -> Type IdList . ';'                    (rule 18)
	IdList -> IdList . ',' id                           (rule 20)

	';'            shift, and enter state 71
	','            shift, and enter state 16


State 71

	Declaration -> Type IdList ';' .                    (rule 18)

	struct         reduce using rule 18
	int            reduce using rule 18
	bool           reduce using rule 18
	print          reduce using rule 18
	read           reduce using rule 18
	if             reduce using rule 18
	while          reduce using rule 18
	delete         reduce using rule 18
	return         reduce using rule 18
	id             reduce using rule 18
	'{'            reduce using rule 18
	'}'            reduce using rule 18


State 72

	Block -> '{' StatementList . '}'                    (rule 39)
	StatementList -> StatementList . Statement          (rule 41)

	print          shift, and enter state 61
	read           shift, and enter state 62
	if             shift, and enter state 63
	while          shift, and enter state 64
	delete         shift, and enter state 65
	return         shift, and enter state 66
	id             shift, and enter state 67
	'{'            shift, and enter state 68
	'}'            shift, and enter state 125

	Statement      goto state 50
	Block          goto state 51
	Assignment     goto state 52
	Print          goto state 53
	Read           goto state 54
	Conditional    goto state 55
	Loop           goto state 56
	Delete         goto state 57
	Ret            goto state 58
	Invocation     goto state 59
	LValue         goto state 60

State 73

	Invocation -> id Arguments . ';'                    (rule 55)

	';'            shift, and enter state 124


State 74

	Arguments -> '(' . ')'                              (rule 81)
	Arguments -> '(' . ExprList ')'                     (rule 82)

	true           shift, and enter state 83
	false          shift, and enter state 84
	new            shift, and enter state 85
	null           shift, and enter state 86
	id             shift, and enter state 87
	num            shift, and enter state 88
	'-'            shift, and enter state 89
	'('            shift, and enter state 90
	')'            shift, and enter state 123
	'!'            shift, and enter state 91

	Expression     goto state 121
	Boolterm       goto state 77
	Simple         goto state 78
	Term           goto state 79
	Unary          goto state 80
	Selector       goto state 81
	Factor         goto state 82
	ExprList       goto state 122

State 75

	Ret -> return MaybeExpr . ';'                       (rule 52)

	';'            shift, and enter state 120


State 76

	MaybeExpr -> Expression .                           (rule 54)
	Expression -> Expression . boolOp Boolterm          (rule 59)

	boolOp         shift, and enter state 104
	';'            reduce using rule 54


State 77

	Expression -> Boolterm .                            (rule 58)
	Boolterm -> Boolterm . cmpOp Simple                 (rule 61)

	endl           reduce using rule 58
	boolOp         reduce using rule 58
	cmpOp          shift, and enter state 119
	')'            reduce using rule 58
	';'            reduce using rule 58
	','            reduce using rule 58


State 78

	Boolterm -> Simple .                                (rule 60)
	Simple -> Simple . '+' Term                         (rule 63)
	Simple -> Simple . '-' Term                         (rule 64)

	endl           reduce using rule 60
	boolOp         reduce using rule 60
	cmpOp          reduce using rule 60
	'+'            shift, and enter state 117
	'-'            shift, and enter state 118
	')'            reduce using rule 60
	';'            reduce using rule 60
	','            reduce using rule 60


State 79

	Simple -> Term .                                    (rule 62)
	Term -> Term . '*' Unary                            (rule 66)
	Term -> Term . '/' Unary                            (rule 67)

	endl           reduce using rule 62
	boolOp         reduce using rule 62
	cmpOp          reduce using rule 62
	'+'            reduce using rule 62
	'-'            reduce using rule 62
	'*'            shift, and enter state 115
	'/'            shift, and enter state 116
	')'            reduce using rule 62
	';'            reduce using rule 62
	','            reduce using rule 62


State 80

	Term -> Unary .                                     (rule 65)

	endl           reduce using rule 65
	boolOp         reduce using rule 65
	cmpOp          reduce using rule 65
	'+'            reduce using rule 65
	'-'            reduce using rule 65
	'*'            reduce using rule 65
	'/'            reduce using rule 65
	')'            reduce using rule 65
	';'            reduce using rule 65
	','            reduce using rule 65


State 81

	Unary -> Selector .                                 (rule 68)
	Selector -> Selector . '.' id                       (rule 72)

	endl           reduce using rule 68
	boolOp         reduce using rule 68
	cmpOp          reduce using rule 68
	'+'            reduce using rule 68
	'-'            reduce using rule 68
	'*'            reduce using rule 68
	'/'            reduce using rule 68
	')'            reduce using rule 68
	';'            reduce using rule 68
	','            reduce using rule 68
	'.'            shift, and enter state 114


State 82

	Selector -> Factor .                                (rule 71)

	endl           reduce using rule 71
	boolOp         reduce using rule 71
	cmpOp          reduce using rule 71
	'+'            reduce using rule 71
	'-'            reduce using rule 71
	'*'            reduce using rule 71
	'/'            reduce using rule 71
	')'            reduce using rule 71
	';'            reduce using rule 71
	','            reduce using rule 71
	'.'            reduce using rule 71


State 83

	Factor -> true .                                    (rule 77)

	endl           reduce using rule 77
	boolOp         reduce using rule 77
	cmpOp          reduce using rule 77
	'+'            reduce using rule 77
	'-'            reduce using rule 77
	'*'            reduce using rule 77
	'/'            reduce using rule 77
	')'            reduce using rule 77
	';'            reduce using rule 77
	','            reduce using rule 77
	'.'            reduce using rule 77


State 84

	Factor -> false .                                   (rule 78)

	endl           reduce using rule 78
	boolOp         reduce using rule 78
	cmpOp          reduce using rule 78
	'+'            reduce using rule 78
	'-'            reduce using rule 78
	'*'            reduce using rule 78
	'/'            reduce using rule 78
	')'            reduce using rule 78
	';'            reduce using rule 78
	','            reduce using rule 78
	'.'            reduce using rule 78


State 85

	Factor -> new . id                                  (rule 79)

	id             shift, and enter state 113


State 86

	Factor -> null .                                    (rule 80)

	endl           reduce using rule 80
	boolOp         reduce using rule 80
	cmpOp          reduce using rule 80
	'+'            reduce using rule 80
	'-'            reduce using rule 80
	'*'            reduce using rule 80
	'/'            reduce using rule 80
	')'            reduce using rule 80
	';'            reduce using rule 80
	','            reduce using rule 80
	'.'            reduce using rule 80


State 87

	Factor -> id .                                      (rule 74)
	Factor -> id . Arguments                            (rule 75)

	endl           reduce using rule 74
	boolOp         reduce using rule 74
	cmpOp          reduce using rule 74
	'+'            reduce using rule 74
	'-'            reduce using rule 74
	'*'            reduce using rule 74
	'/'            reduce using rule 74
	'('            shift, and enter state 74
	')'            reduce using rule 74
	';'            reduce using rule 74
	','            reduce using rule 74
	'.'            reduce using rule 74

	Arguments      goto state 112

State 88

	Factor -> num .                                     (rule 76)

	endl           reduce using rule 76
	boolOp         reduce using rule 76
	cmpOp          reduce using rule 76
	'+'            reduce using rule 76
	'-'            reduce using rule 76
	'*'            reduce using rule 76
	'/'            reduce using rule 76
	')'            reduce using rule 76
	';'            reduce using rule 76
	','            reduce using rule 76
	'.'            reduce using rule 76


State 89

	Unary -> '-' . Unary                                (rule 70)

	true           shift, and enter state 83
	false          shift, and enter state 84
	new            shift, and enter state 85
	null           shift, and enter state 86
	id             shift, and enter state 87
	num            shift, and enter state 88
	'-'            shift, and enter state 89
	'('            shift, and enter state 90
	'!'            shift, and enter state 91

	Unary          goto state 111
	Selector       goto state 81
	Factor         goto state 82

State 90

	Factor -> '(' . Expression ')'                      (rule 73)

	true           shift, and enter state 83
	false          shift, and enter state 84
	new            shift, and enter state 85
	null           shift, and enter state 86
	id             shift, and enter state 87
	num            shift, and enter state 88
	'-'            shift, and enter state 89
	'('            shift, and enter state 90
	'!'            shift, and enter state 91

	Expression     goto state 110
	Boolterm       goto state 77
	Simple         goto state 78
	Term           goto state 79
	Unary          goto state 80
	Selector       goto state 81
	Factor         goto state 82

State 91

	Unary -> '!' . Unary                                (rule 69)

	true           shift, and enter state 83
	false          shift, and enter state 84
	new            shift, and enter state 85
	null           shift, and enter state 86
	id             shift, and enter state 87
	num            shift, and enter state 88
	'-'            shift, and enter state 89
	'('            shift, and enter state 90
	'!'            shift, and enter state 91

	Unary          goto state 109
	Selector       goto state 81
	Factor         goto state 82

State 92

	Delete -> delete Expression . ';'                   (rule 51)
	Expression -> Expression . boolOp Boolterm          (rule 59)

	boolOp         shift, and enter state 104
	';'            shift, and enter state 108


State 93

	Loop -> while '(' . Expression ')' Block            (rule 50)

	true           shift, and enter state 83
	false          shift, and enter state 84
	new            shift, and enter state 85
	null           shift, and enter state 86
	id             shift, and enter state 87
	num            shift, and enter state 88
	'-'            shift, and enter state 89
	'('            shift, and enter state 90
	'!'            shift, and enter state 91

	Expression     goto state 107
	Boolterm       goto state 77
	Simple         goto state 78
	Term           goto state 79
	Unary          goto state 80
	Selector       goto state 81
	Factor         goto state 82

State 94

	Conditional -> if '(' . Expression ')' Block ElseBlock    (rule 47)

	true           shift, and enter state 83
	false          shift, and enter state 84
	new            shift, and enter state 85
	null           shift, and enter state 86
	id             shift, and enter state 87
	num            shift, and enter state 88
	'-'            shift, and enter state 89
	'('            shift, and enter state 90
	'!'            shift, and enter state 91

	Expression     goto state 106
	Boolterm       goto state 77
	Simple         goto state 78
	Term           goto state 79
	Unary          goto state 80
	Selector       goto state 81
	Factor         goto state 82

State 95

	Read -> read LValue . ';'                           (rule 46)
	LValue -> LValue . '.' id                           (rule 57)

	';'            shift, and enter state 105
	'.'            shift, and enter state 99


State 96

	LValue -> id .                                      (rule 56)

	';'            reduce using rule 56
	'.'            reduce using rule 56


State 97

	Print -> print Expression . Endl ';'                (rule 43)
	Expression -> Expression . boolOp Boolterm          (rule 59)

	endl           shift, and enter state 103
	boolOp         shift, and enter state 104
	';'            reduce using rule 44

	Endl           goto state 102

State 98

	Assignment -> LValue '=' . Expression ';'           (rule 42)

	true           shift, and enter state 83
	false          shift, and enter state 84
	new            shift, and enter state 85
	null           shift, and enter state 86
	id             shift, and enter state 87
	num            shift, and enter state 88
	'-'            shift, and enter state 89
	'('            shift, and enter state 90
	'!'            shift, and enter state 91

	Expression     goto state 101
	Boolterm       goto state 77
	Simple         goto state 78
	Term           goto state 79
	Unary          goto state 80
	Selector       goto state 81
	Factor         goto state 82

State 99

	LValue -> LValue '.' . id                           (rule 57)

	id             shift, and enter state 100


State 100

	LValue -> LValue '.' id .                           (rule 57)

	'='            reduce using rule 57
	';'            reduce using rule 57
	'.'            reduce using rule 57


State 101

	Assignment -> LValue '=' Expression . ';'           (rule 42)
	Expression -> Expression . boolOp Boolterm          (rule 59)

	boolOp         shift, and enter state 104
	';'            shift, and enter state 139


State 102

	Print -> print Expression Endl . ';'                (rule 43)

	';'            shift, and enter state 138


State 103

	Endl -> endl .                                      (rule 45)

	';'            reduce using rule 45


State 104

	Expression -> Expression boolOp . Boolterm          (rule 59)

	true           shift, and enter state 83
	false          shift, and enter state 84
	new            shift, and enter state 85
	null           shift, and enter state 86
	id             shift, and enter state 87
	num            shift, and enter state 88
	'-'            shift, and enter state 89
	'('            shift, and enter state 90
	'!'            shift, and enter state 91

	Boolterm       goto state 137
	Simple         goto state 78
	Term           goto state 79
	Unary          goto state 80
	Selector       goto state 81
	Factor         goto state 82

State 105

	Read -> read LValue ';' .                           (rule 46)

	print          reduce using rule 46
	read           reduce using rule 46
	if             reduce using rule 46
	while          reduce using rule 46
	delete         reduce using rule 46
	return         reduce using rule 46
	id             reduce using rule 46
	'{'            reduce using rule 46
	'}'            reduce using rule 46


State 106

	Conditional -> if '(' Expression . ')' Block ElseBlock    (rule 47)
	Expression -> Expression . boolOp Boolterm          (rule 59)

	boolOp         shift, and enter state 104
	')'            shift, and enter state 136


State 107

	Loop -> while '(' Expression . ')' Block            (rule 50)
	Expression -> Expression . boolOp Boolterm          (rule 59)

	boolOp         shift, and enter state 104
	')'            shift, and enter state 135


State 108

	Delete -> delete Expression ';' .                   (rule 51)

	print          reduce using rule 51
	read           reduce using rule 51
	if             reduce using rule 51
	while          reduce using rule 51
	delete         reduce using rule 51
	return         reduce using rule 51
	id             reduce using rule 51
	'{'            reduce using rule 51
	'}'            reduce using rule 51


State 109

	Unary -> '!' Unary .                                (rule 69)

	endl           reduce using rule 69
	boolOp         reduce using rule 69
	cmpOp          reduce using rule 69
	'+'            reduce using rule 69
	'-'            reduce using rule 69
	'*'            reduce using rule 69
	'/'            reduce using rule 69
	')'            reduce using rule 69
	';'            reduce using rule 69
	','            reduce using rule 69


State 110

	Expression -> Expression . boolOp Boolterm          (rule 59)
	Factor -> '(' Expression . ')'                      (rule 73)

	boolOp         shift, and enter state 104
	')'            shift, and enter state 134


State 111

	Unary -> '-' Unary .                                (rule 70)

	endl           reduce using rule 70
	boolOp         reduce using rule 70
	cmpOp          reduce using rule 70
	'+'            reduce using rule 70
	'-'            reduce using rule 70
	'*'            reduce using rule 70
	'/'            reduce using rule 70
	')'            reduce using rule 70
	';'            reduce using rule 70
	','            reduce using rule 70


State 112

	Factor -> id Arguments .                            (rule 75)

	endl           reduce using rule 75
	boolOp         reduce using rule 75
	cmpOp          reduce using rule 75
	'+'            reduce using rule 75
	'-'            reduce using rule 75
	'*'            reduce using rule 75
	'/'            reduce using rule 75
	')'            reduce using rule 75
	';'            reduce using rule 75
	','            reduce using rule 75
	'.'            reduce using rule 75


State 113

	Factor -> new id .                                  (rule 79)

	endl           reduce using rule 79
	boolOp         reduce using rule 79
	cmpOp          reduce using rule 79
	'+'            reduce using rule 79
	'-'            reduce using rule 79
	'*'            reduce using rule 79
	'/'            reduce using rule 79
	')'            reduce using rule 79
	';'            reduce using rule 79
	','            reduce using rule 79
	'.'            reduce using rule 79


State 114

	Selector -> Selector '.' . id                       (rule 72)

	id             shift, and enter state 133


State 115

	Term -> Term '*' . Unary                            (rule 66)

	true           shift, and enter state 83
	false          shift, and enter state 84
	new            shift, and enter state 85
	null           shift, and enter state 86
	id             shift, and enter state 87
	num            shift, and enter state 88
	'-'            shift, and enter state 89
	'('            shift, and enter state 90
	'!'            shift, and enter state 91

	Unary          goto state 132
	Selector       goto state 81
	Factor         goto state 82

State 116

	Term -> Term '/' . Unary                            (rule 67)

	true           shift, and enter state 83
	false          shift, and enter state 84
	new            shift, and enter state 85
	null           shift, and enter state 86
	id             shift, and enter state 87
	num            shift, and enter state 88
	'-'            shift, and enter state 89
	'('            shift, and enter state 90
	'!'            shift, and enter state 91

	Unary          goto state 131
	Selector       goto state 81
	Factor         goto state 82

State 117

	Simple -> Simple '+' . Term                         (rule 63)

	true           shift, and enter state 83
	false          shift, and enter state 84
	new            shift, and enter state 85
	null           shift, and enter state 86
	id             shift, and enter state 87
	num            shift, and enter state 88
	'-'            shift, and enter state 89
	'('            shift, and enter state 90
	'!'            shift, and enter state 91

	Term           goto state 130
	Unary          goto state 80
	Selector       goto state 81
	Factor         goto state 82

State 118

	Simple -> Simple '-' . Term                         (rule 64)

	true           shift, and enter state 83
	false          shift, and enter state 84
	new            shift, and enter state 85
	null           shift, and enter state 86
	id             shift, and enter state 87
	num            shift, and enter state 88
	'-'            shift, and enter state 89
	'('            shift, and enter state 90
	'!'            shift, and enter state 91

	Term           goto state 129
	Unary          goto state 80
	Selector       goto state 81
	Factor         goto state 82

State 119

	Boolterm -> Boolterm cmpOp . Simple                 (rule 61)

	true           shift, and enter state 83
	false          shift, and enter state 84
	new            shift, and enter state 85
	null           shift, and enter state 86
	id             shift, and enter state 87
	num            shift, and enter state 88
	'-'            shift, and enter state 89
	'('            shift, and enter state 90
	'!'            shift, and enter state 91

	Simple         goto state 128
	Term           goto state 79
	Unary          goto state 80
	Selector       goto state 81
	Factor         goto state 82

State 120

	Ret -> return MaybeExpr ';' .                       (rule 52)

	print          reduce using rule 52
	read           reduce using rule 52
	if             reduce using rule 52
	while          reduce using rule 52
	delete         reduce using rule 52
	return         reduce using rule 52
	id             reduce using rule 52
	'{'            reduce using rule 52
	'}'            reduce using rule 52


State 121

	Expression -> Expression . boolOp Boolterm          (rule 59)
	ExprList -> Expression .                            (rule 83)

	boolOp         shift, and enter state 104
	')'            reduce using rule 83
	','            reduce using rule 83


State 122

	Arguments -> '(' ExprList . ')'                     (rule 82)
	ExprList -> ExprList . ',' Expression               (rule 84)

	')'            shift, and enter state 126
	','            shift, and enter state 127


State 123

	Arguments -> '(' ')' .                              (rule 81)

	endl           reduce using rule 81
	boolOp         reduce using rule 81
	cmpOp          reduce using rule 81
	'+'            reduce using rule 81
	'-'            reduce using rule 81
	'*'            reduce using rule 81
	'/'            reduce using rule 81
	')'            reduce using rule 81
	';'            reduce using rule 81
	','            reduce using rule 81
	'.'            reduce using rule 81


State 124

	Invocation -> id Arguments ';' .                    (rule 55)

	print          reduce using rule 55
	read           reduce using rule 55
	if             reduce using rule 55
	while          reduce using rule 55
	delete         reduce using rule 55
	return         reduce using rule 55
	id             reduce using rule 55
	'{'            reduce using rule 55
	'}'            reduce using rule 55


State 125

	Block -> '{' StatementList '}' .                    (rule 39)

	print          reduce using rule 39
	read           reduce using rule 39
	if             reduce using rule 39
	else           reduce using rule 39
	while          reduce using rule 39
	delete         reduce using rule 39
	return         reduce using rule 39
	id             reduce using rule 39
	'{'            reduce using rule 39
	'}'            reduce using rule 39


State 126

	Arguments -> '(' ExprList ')' .                     (rule 82)

	endl           reduce using rule 82
	boolOp         reduce using rule 82
	cmpOp          reduce using rule 82
	'+'            reduce using rule 82
	'-'            reduce using rule 82
	'*'            reduce using rule 82
	'/'            reduce using rule 82
	')'            reduce using rule 82
	';'            reduce using rule 82
	','            reduce using rule 82
	'.'            reduce using rule 82


State 127

	ExprList -> ExprList ',' . Expression               (rule 84)

	true           shift, and enter state 83
	false          shift, and enter state 84
	new            shift, and enter state 85
	null           shift, and enter state 86
	id             shift, and enter state 87
	num            shift, and enter state 88
	'-'            shift, and enter state 89
	'('            shift, and enter state 90
	'!'            shift, and enter state 91

	Expression     goto state 142
	Boolterm       goto state 77
	Simple         goto state 78
	Term           goto state 79
	Unary          goto state 80
	Selector       goto state 81
	Factor         goto state 82

State 128

	Boolterm -> Boolterm cmpOp Simple .                 (rule 61)
	Simple -> Simple . '+' Term                         (rule 63)
	Simple -> Simple . '-' Term                         (rule 64)

	endl           reduce using rule 61
	boolOp         reduce using rule 61
	cmpOp          reduce using rule 61
	'+'            shift, and enter state 117
	'-'            shift, and enter state 118
	')'            reduce using rule 61
	';'            reduce using rule 61
	','            reduce using rule 61


State 129

	Simple -> Simple '-' Term .                         (rule 64)
	Term -> Term . '*' Unary                            (rule 66)
	Term -> Term . '/' Unary                            (rule 67)

	endl           reduce using rule 64
	boolOp         reduce using rule 64
	cmpOp          reduce using rule 64
	'+'            reduce using rule 64
	'-'            reduce using rule 64
	'*'            shift, and enter state 115
	'/'            shift, and enter state 116
	')'            reduce using rule 64
	';'            reduce using rule 64
	','            reduce using rule 64


State 130

	Simple -> Simple '+' Term .                         (rule 63)
	Term -> Term . '*' Unary                            (rule 66)
	Term -> Term . '/' Unary                            (rule 67)

	endl           reduce using rule 63
	boolOp         reduce using rule 63
	cmpOp          reduce using rule 63
	'+'            reduce using rule 63
	'-'            reduce using rule 63
	'*'            shift, and enter state 115
	'/'            shift, and enter state 116
	')'            reduce using rule 63
	';'            reduce using rule 63
	','            reduce using rule 63


State 131

	Term -> Term '/' Unary .                            (rule 67)

	endl           reduce using rule 67
	boolOp         reduce using rule 67
	cmpOp          reduce using rule 67
	'+'            reduce using rule 67
	'-'            reduce using rule 67
	'*'            reduce using rule 67
	'/'            reduce using rule 67
	')'            reduce using rule 67
	';'            reduce using rule 67
	','            reduce using rule 67


State 132

	Term -> Term '*' Unary .                            (rule 66)

	endl           reduce using rule 66
	boolOp         reduce using rule 66
	cmpOp          reduce using rule 66
	'+'            reduce using rule 66
	'-'            reduce using rule 66
	'*'            reduce using rule 66
	'/'            reduce using rule 66
	')'            reduce using rule 66
	';'            reduce using rule 66
	','            reduce using rule 66


State 133

	Selector -> Selector '.' id .                       (rule 72)

	endl           reduce using rule 72
	boolOp         reduce using rule 72
	cmpOp          reduce using rule 72
	'+'            reduce using rule 72
	'-'            reduce using rule 72
	'*'            reduce using rule 72
	'/'            reduce using rule 72
	')'            reduce using rule 72
	';'            reduce using rule 72
	','            reduce using rule 72
	'.'            reduce using rule 72


State 134

	Factor -> '(' Expression ')' .                      (rule 73)

	endl           reduce using rule 73
	boolOp         reduce using rule 73
	cmpOp          reduce using rule 73
	'+'            reduce using rule 73
	'-'            reduce using rule 73
	'*'            reduce using rule 73
	'/'            reduce using rule 73
	')'            reduce using rule 73
	';'            reduce using rule 73
	','            reduce using rule 73
	'.'            reduce using rule 73


State 135

	Loop -> while '(' Expression ')' . Block            (rule 50)

	'{'            shift, and enter state 68

	Block          goto state 141

State 136

	Conditional -> if '(' Expression ')' . Block ElseBlock    (rule 47)

	'{'            shift, and enter state 68

	Block          goto state 140

State 137

	Expression -> Expression boolOp Boolterm .          (rule 59)
	Boolterm -> Boolterm . cmpOp Simple                 (rule 61)

	endl           reduce using rule 59
	boolOp         reduce using rule 59
	cmpOp          shift, and enter state 119
	')'            reduce using rule 59
	';'            reduce using rule 59
	','            reduce using rule 59


State 138

	Print -> print Expression Endl ';' .                (rule 43)

	print          reduce using rule 43
	read           reduce using rule 43
	if             reduce using rule 43
	while          reduce using rule 43
	delete         reduce using rule 43
	return         reduce using rule 43
	id             reduce using rule 43
	'{'            reduce using rule 43
	'}'            reduce using rule 43


State 139

	Assignment -> LValue '=' Expression ';' .           (rule 42)

	print          reduce using rule 42
	read           reduce using rule 42
	if             reduce using rule 42
	while          reduce using rule 42
	delete         reduce using rule 42
	return         reduce using rule 42
	id             reduce using rule 42
	'{'            reduce using rule 42
	'}'            reduce using rule 42


State 140

	Conditional -> if '(' Expression ')' Block . ElseBlock    (rule 47)

	print          reduce using rule 48
	read           reduce using rule 48
	if             reduce using rule 48
	else           shift, and enter state 144
	while          reduce using rule 48
	delete         reduce using rule 48
	return         reduce using rule 48
	id             reduce using rule 48
	'{'            reduce using rule 48
	'}'            reduce using rule 48

	ElseBlock      goto state 143

State 141

	Loop -> while '(' Expression ')' Block .            (rule 50)

	print          reduce using rule 50
	read           reduce using rule 50
	if             reduce using rule 50
	while          reduce using rule 50
	delete         reduce using rule 50
	return         reduce using rule 50
	id             reduce using rule 50
	'{'            reduce using rule 50
	'}'            reduce using rule 50


State 142

	Expression -> Expression . boolOp Boolterm          (rule 59)
	ExprList -> ExprList ',' Expression .               (rule 84)

	boolOp         shift, and enter state 104
	')'            reduce using rule 84
	','            reduce using rule 84


State 143

	Conditional -> if '(' Expression ')' Block ElseBlock .    (rule 47)

	print          reduce using rule 47
	read           reduce using rule 47
	if             reduce using rule 47
	while          reduce using rule 47
	delete         reduce using rule 47
	return         reduce using rule 47
	id             reduce using rule 47
	'{'            reduce using rule 47
	'}'            reduce using rule 47


State 144

	ElseBlock -> else . Block                           (rule 49)

	'{'            shift, and enter state 68

	Block          goto state 145

State 145

	ElseBlock -> else Block .                           (rule 49)

	print          reduce using rule 49
	read           reduce using rule 49
	if             reduce using rule 49
	while          reduce using rule 49
	delete         reduce using rule 49
	return         reduce using rule 49
	id             reduce using rule 49
	'{'            reduce using rule 49
	'}'            reduce using rule 49


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 85
Number of terminals: 34
Number of non-terminals: 41
Number of states: 146
